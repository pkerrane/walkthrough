library(tidyverse)
library(ggrepel)
library(nflreadr)
library(nflplotR)
library(dplyr)

options(scipen = 9999)

pbp <- load_pbp(2025)

minplays <- 10
dbs <- 10


qbs <- pbp %>%
  filter(!is.na(epa)) %>%
  group_by(id, name) %>%
  summarize(
    epa = mean(qb_epa, na.rm = T),
    cpoe = mean(cpoe, na.rm = T),
    sr = mean(success, na.rm = T),
    g = length(unique(game_id)),
    n_dropbacks = sum(pass, na.rm = T),
    n_plays = n(),
    epa_g = epa * n_plays / g,
    rush_g = sum(rushing_yards, na.rm = T) / g,
    team = last(posteam)
  ) %>%
  ungroup() %>%
  
  #CHANGE +10 from Weeks 1-10, then +15
  
  filter(n_dropbacks >= dbs & n_plays >= minplays)
  
  load_teams()
  qbs <- qbs %>%
  left_join(load_teams(), by = c('team' = 'team_abbr'))
  
  
  #make Figure
  
 qbs %>%
  ggplot(aes(x = sr, y = epa_g)) +
  
  #horizontal line with mean EPA
  geom_hline(yintercept = mean(qbs$epa_g), color = "black", linetype = "dashed", alpha=0.5) +
  
  #vertical line with mean CPOE
  geom_vline(xintercept =  mean(qbs$sr), color = "black", linetype = "dashed", alpha=0.5) +
  
  #add points for the QBs with the right colors
  #cex controls point size and alpha the transparency (alpha = 1 is normal)
 
 #geom_point(color = qbs$team_color, cex=qbs$n_plays / 55, alpha = .6) +
  
  geom_point(color = qbs$team_color, cex= (qbs$cpoe + 15) / 1.5, alpha = .8) +
  
  
  #add names using ggrepel, which tries to make them not overlap
  geom_text_repel(aes(label=name)) +
  
  #add a smooth line fitting cpoe + epa
  stat_smooth(geom='line', alpha=0.5, se=FALSE, method='lm')+
  
  #titles and caption
  labs(x = "Success Rate",
       y = "EPA per Game",
       title = "2025 EPA per Game and Success Rate",
       subtitle = paste0("(bubble size = CPOE, min ", minplays, " plays)"),
       
         
       caption = "Figure: @PatKerrane | Data: @nflfastR") +
  #uses the black and white ggplot theme
  theme_bw() +
  #center title with hjust = 0.5
  theme(
    plot.title = element_text(size = 14, hjust = 0.5, face = "bold")
  ) +
  theme( 
   plot.subtitle=element_text(hjust=0.5)) +
   
   
   
  #make ticks look nice
  #if this doesn't work, `install.packages('scales')`
  scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
  scale_x_continuous(breaks = scales::pretty_breaks(n = 10), labels = scales::percent_format(accuracy = 1))
